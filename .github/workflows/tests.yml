name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Compile and Run Tests
      working-directory: tests
      run: |
        g++ -I../include ini.cpp && ./a.out
        
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: microsoft/setup-msbuild@v2
    - name: Setup CL
      shell: cmd
      run: |
        @echo off
        setlocal EnableDelayedExpansion

        set "vswhere=%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
        set "install_path="

        for /f "usebackq tokens=*" %%i in (`"!vswhere!" -latest -prerelease -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) do (
            set "install_path=%%i"
        )

        if defined install_path (
            echo Setting up compile environment...
            call "!install_path!\VC\Auxiliary\Build\vcvarsall.bat" x64
        ) else (
            echo Error: MSVC build tools not found.
            echo Please install Visual Studio Community
            exit /b 1
        )

        rem Export environment variables for future steps
        rem Using setx to persist the environment variables
        setx PATH "%PATH%" 
        setx INCLUDE "%INCLUDE%" 
        setx LIB "%LIB%" 
        setx LIBPATH "%LIBPATH%"
        setx VSINSTALLDIR "%VSINSTALLDIR%"
        setx VSCMD_ARG_TGT_ARCH x64
        setx VSCMD_ARG_HOST_ARCH x64
        setx VSCMD_VER "2022"

    - name: Compile and Run Tests on Windows
      working-directory: tests
      shell: cmd
      run: |
        cl /EHsc /I..\include ini.cpp
    - run: ini.exe
      working-directory: tests
