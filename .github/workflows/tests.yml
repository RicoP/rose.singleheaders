name: Run Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Compile and Run Tests
      working-directory: tests
      run: |
        g++ -I../include ini.cpp && ./a.out
        
  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: microsoft/setup-msbuild@v2
    - name: Setup CL
      run: |
        # Path to vcvarsall.bat
        $vcvarsAll = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"

        if (-Not (Test-Path $vcvarsAll)) {
            Write-Host "Error: vcvarsall.bat not found at $vcvarsAll"
            exit 1
        }

        # Properly quote the path to handle spaces
        $quotedVcvarsAll = "`"$vcvarsAll`""

        # Run vcvarsall.bat with arguments in cmd.exe and capture environment variables
        $envChanges = cmd.exe /c "call $quotedVcvarsAll x64 && set"

        if ($LASTEXITCODE -ne 0) {
            Write-Host "Error: Failed to set up MSVC environment."
            exit 1
        }

        # Apply the environment changes to the current PowerShell session
        $envChanges -split "`r`n" | ForEach-Object {
            $parts = $_ -split "=", 2
            if ($parts.Count -eq 2) {
                $key = $parts[0].Trim()
                $value = $parts[1].Trim()
                Set-Item -Path "Env:$key" -Value $value
            }
        }

        Write-Host "MSVC environment successfully set up."

    - name: Compile and Run Tests on Windows
      working-directory: tests
      shell: cmd
      run: |
        cl /EHsc /I..\include ini.cpp
    - run: ini.exe
      working-directory: tests
